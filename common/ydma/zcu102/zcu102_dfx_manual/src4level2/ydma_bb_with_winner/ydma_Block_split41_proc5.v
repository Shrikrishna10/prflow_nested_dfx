// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ydma_Block_split41_proc5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        winner_size,
        winner,
        m_axi_aximm3_AWVALID,
        m_axi_aximm3_AWREADY,
        m_axi_aximm3_AWADDR,
        m_axi_aximm3_AWID,
        m_axi_aximm3_AWLEN,
        m_axi_aximm3_AWSIZE,
        m_axi_aximm3_AWBURST,
        m_axi_aximm3_AWLOCK,
        m_axi_aximm3_AWCACHE,
        m_axi_aximm3_AWPROT,
        m_axi_aximm3_AWQOS,
        m_axi_aximm3_AWREGION,
        m_axi_aximm3_AWUSER,
        m_axi_aximm3_WVALID,
        m_axi_aximm3_WREADY,
        m_axi_aximm3_WDATA,
        m_axi_aximm3_WSTRB,
        m_axi_aximm3_WLAST,
        m_axi_aximm3_WID,
        m_axi_aximm3_WUSER,
        m_axi_aximm3_ARVALID,
        m_axi_aximm3_ARREADY,
        m_axi_aximm3_ARADDR,
        m_axi_aximm3_ARID,
        m_axi_aximm3_ARLEN,
        m_axi_aximm3_ARSIZE,
        m_axi_aximm3_ARBURST,
        m_axi_aximm3_ARLOCK,
        m_axi_aximm3_ARCACHE,
        m_axi_aximm3_ARPROT,
        m_axi_aximm3_ARQOS,
        m_axi_aximm3_ARREGION,
        m_axi_aximm3_ARUSER,
        m_axi_aximm3_RVALID,
        m_axi_aximm3_RREADY,
        m_axi_aximm3_RDATA,
        m_axi_aximm3_RLAST,
        m_axi_aximm3_RID,
        m_axi_aximm3_RUSER,
        m_axi_aximm3_RRESP,
        m_axi_aximm3_BVALID,
        m_axi_aximm3_BREADY,
        m_axi_aximm3_BRESP,
        m_axi_aximm3_BID,
        m_axi_aximm3_BUSER,
        input3,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n,
        I_v3_buffer_V_dout,
        I_v3_buffer_V_empty_n,
        O_v3_buffer_V_read
);



parameter    ap_ST_fsm_state1 = 75'd1;
parameter    ap_ST_fsm_state2 = 75'd2;
parameter    ap_ST_fsm_state3 = 75'd4;
parameter    ap_ST_fsm_state4 = 75'd8;
parameter    ap_ST_fsm_state5 = 75'd16;
parameter    ap_ST_fsm_state6 = 75'd32;
parameter    ap_ST_fsm_state7 = 75'd64;
parameter    ap_ST_fsm_state8 = 75'd128;
parameter    ap_ST_fsm_state9 = 75'd256;
parameter    ap_ST_fsm_state10 = 75'd512;
parameter    ap_ST_fsm_state11 = 75'd1024;
parameter    ap_ST_fsm_state12 = 75'd2048;
parameter    ap_ST_fsm_state13 = 75'd4096;
parameter    ap_ST_fsm_state14 = 75'd8192;
parameter    ap_ST_fsm_state15 = 75'd16384;
parameter    ap_ST_fsm_state16 = 75'd32768;
parameter    ap_ST_fsm_state17 = 75'd65536;
parameter    ap_ST_fsm_state18 = 75'd131072;
parameter    ap_ST_fsm_state19 = 75'd262144;
parameter    ap_ST_fsm_state20 = 75'd524288;
parameter    ap_ST_fsm_state21 = 75'd1048576;
parameter    ap_ST_fsm_state22 = 75'd2097152;
parameter    ap_ST_fsm_state23 = 75'd4194304;
parameter    ap_ST_fsm_state24 = 75'd8388608;
parameter    ap_ST_fsm_state25 = 75'd16777216;
parameter    ap_ST_fsm_state26 = 75'd33554432;
parameter    ap_ST_fsm_state27 = 75'd67108864;
parameter    ap_ST_fsm_state28 = 75'd134217728;
parameter    ap_ST_fsm_state29 = 75'd268435456;
parameter    ap_ST_fsm_state30 = 75'd536870912;
parameter    ap_ST_fsm_state31 = 75'd1073741824;
parameter    ap_ST_fsm_state32 = 75'd2147483648;
parameter    ap_ST_fsm_state33 = 75'd4294967296;
parameter    ap_ST_fsm_state34 = 75'd8589934592;
parameter    ap_ST_fsm_state35 = 75'd17179869184;
parameter    ap_ST_fsm_state36 = 75'd34359738368;
parameter    ap_ST_fsm_state37 = 75'd68719476736;
parameter    ap_ST_fsm_state38 = 75'd137438953472;
parameter    ap_ST_fsm_state39 = 75'd274877906944;
parameter    ap_ST_fsm_state40 = 75'd549755813888;
parameter    ap_ST_fsm_state41 = 75'd1099511627776;
parameter    ap_ST_fsm_state42 = 75'd2199023255552;
parameter    ap_ST_fsm_state43 = 75'd4398046511104;
parameter    ap_ST_fsm_state44 = 75'd8796093022208;
parameter    ap_ST_fsm_state45 = 75'd17592186044416;
parameter    ap_ST_fsm_state46 = 75'd35184372088832;
parameter    ap_ST_fsm_state47 = 75'd70368744177664;
parameter    ap_ST_fsm_state48 = 75'd140737488355328;
parameter    ap_ST_fsm_state49 = 75'd281474976710656;
parameter    ap_ST_fsm_state50 = 75'd562949953421312;
parameter    ap_ST_fsm_state51 = 75'd1125899906842624;
parameter    ap_ST_fsm_state52 = 75'd2251799813685248;
parameter    ap_ST_fsm_state53 = 75'd4503599627370496;
parameter    ap_ST_fsm_state54 = 75'd9007199254740992;
parameter    ap_ST_fsm_state55 = 75'd18014398509481984;
parameter    ap_ST_fsm_state56 = 75'd36028797018963968;
parameter    ap_ST_fsm_state57 = 75'd72057594037927936;
parameter    ap_ST_fsm_state58 = 75'd144115188075855872;
parameter    ap_ST_fsm_state59 = 75'd288230376151711744;
parameter    ap_ST_fsm_state60 = 75'd576460752303423488;
parameter    ap_ST_fsm_state61 = 75'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 75'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 75'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 75'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 75'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 75'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 75'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 75'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 75'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 75'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 75'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 75'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 75'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 75'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 75'd18889465931478580854784;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] winner_size;
input  [63:0] winner;
output   m_axi_aximm3_AWVALID;
input   m_axi_aximm3_AWREADY;
output  [63:0] m_axi_aximm3_AWADDR;
output  [0:0] m_axi_aximm3_AWID;
output  [31:0] m_axi_aximm3_AWLEN;
output  [2:0] m_axi_aximm3_AWSIZE;
output  [1:0] m_axi_aximm3_AWBURST;
output  [1:0] m_axi_aximm3_AWLOCK;
output  [3:0] m_axi_aximm3_AWCACHE;
output  [2:0] m_axi_aximm3_AWPROT;
output  [3:0] m_axi_aximm3_AWQOS;
output  [3:0] m_axi_aximm3_AWREGION;
output  [0:0] m_axi_aximm3_AWUSER;
output   m_axi_aximm3_WVALID;
input   m_axi_aximm3_WREADY;
output  [31:0] m_axi_aximm3_WDATA;
output  [3:0] m_axi_aximm3_WSTRB;
output   m_axi_aximm3_WLAST;
output  [0:0] m_axi_aximm3_WID;
output  [0:0] m_axi_aximm3_WUSER;
output   m_axi_aximm3_ARVALID;
input   m_axi_aximm3_ARREADY;
output  [63:0] m_axi_aximm3_ARADDR;
output  [0:0] m_axi_aximm3_ARID;
output  [31:0] m_axi_aximm3_ARLEN;
output  [2:0] m_axi_aximm3_ARSIZE;
output  [1:0] m_axi_aximm3_ARBURST;
output  [1:0] m_axi_aximm3_ARLOCK;
output  [3:0] m_axi_aximm3_ARCACHE;
output  [2:0] m_axi_aximm3_ARPROT;
output  [3:0] m_axi_aximm3_ARQOS;
output  [3:0] m_axi_aximm3_ARREGION;
output  [0:0] m_axi_aximm3_ARUSER;
input   m_axi_aximm3_RVALID;
output   m_axi_aximm3_RREADY;
input  [31:0] m_axi_aximm3_RDATA;
input   m_axi_aximm3_RLAST;
input  [0:0] m_axi_aximm3_RID;
input  [0:0] m_axi_aximm3_RUSER;
input  [1:0] m_axi_aximm3_RRESP;
input   m_axi_aximm3_BVALID;
output   m_axi_aximm3_BREADY;
input  [1:0] m_axi_aximm3_BRESP;
input  [0:0] m_axi_aximm3_BID;
input  [0:0] m_axi_aximm3_BUSER;
input  [63:0] input3;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;
input   [31:0] I_v3_buffer_V_dout; // added
input    I_v3_buffer_V_empty_n; // added 
output    O_v3_buffer_V_read; //added

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_aximm3_AWVALID;
reg[63:0] m_axi_aximm3_AWADDR;
reg[0:0] m_axi_aximm3_AWID;
reg[31:0] m_axi_aximm3_AWLEN;
reg[2:0] m_axi_aximm3_AWSIZE;
reg[1:0] m_axi_aximm3_AWBURST;
reg[1:0] m_axi_aximm3_AWLOCK;
reg[3:0] m_axi_aximm3_AWCACHE;
reg[2:0] m_axi_aximm3_AWPROT;
reg[3:0] m_axi_aximm3_AWQOS;
reg[3:0] m_axi_aximm3_AWREGION;
reg[0:0] m_axi_aximm3_AWUSER;
reg m_axi_aximm3_WVALID;
reg[31:0] m_axi_aximm3_WDATA;
reg[3:0] m_axi_aximm3_WSTRB;
reg m_axi_aximm3_WLAST;
reg[0:0] m_axi_aximm3_WID;
reg[0:0] m_axi_aximm3_WUSER;
reg m_axi_aximm3_ARVALID;
reg m_axi_aximm3_RREADY;
reg m_axi_aximm3_BREADY;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [74:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    aximm3_blk_n_AW;
wire    ap_CS_fsm_state2;
reg   [0:0] icmp_ln46_reg_173;
reg    aximm3_blk_n_W;
wire    ap_CS_fsm_state7;
reg    aximm3_blk_n_B;
wire    ap_CS_fsm_state75;
wire   [0:0] icmp_ln46_fu_133_p2;
reg   [61:0] trunc_ln321_5_reg_188;
wire   [61:0] grp_fu_122_p4;
reg   [61:0] trunc_ln321_6_reg_199;
wire    ap_CS_fsm_state5;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_start;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_done;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_idle;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_ready;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_AWVALID;
wire   [63:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_AWADDR;
wire   [0:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_AWID;
wire   [31:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_AWLEN;
wire   [2:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_AWSIZE;
wire   [1:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_AWBURST;
wire   [1:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_AWLOCK;
wire   [3:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_AWCACHE;
wire   [2:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_AWPROT;
wire   [3:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_AWQOS;
wire   [3:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_AWREGION;
wire   [0:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_AWUSER;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_WVALID;
wire   [31:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_WDATA;
wire   [3:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_WSTRB;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_WLAST;
wire   [0:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_WID;
wire   [0:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_WUSER;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARVALID;
wire   [63:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARADDR;
wire   [0:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARID;
wire   [31:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARLEN;
wire   [2:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARSIZE;
wire   [1:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARBURST;
wire   [1:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARLOCK;
wire   [3:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARCACHE;
wire   [2:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARPROT;
wire   [3:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARQOS;
wire   [3:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARREGION;
wire   [0:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARUSER;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_RREADY;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_BREADY;
wire   [31:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_v3_buffer_V_din;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_v3_buffer_V_write;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_ext_blocking_n;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_str_blocking_n;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_int_blocking_n;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_start;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_done;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_idle;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_ready;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWVALID;
wire   [63:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWADDR;
wire   [0:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWID;
wire   [31:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWLEN;
wire   [2:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWSIZE;
wire   [1:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWBURST;
wire   [1:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWLOCK;
wire   [3:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWCACHE;
wire   [2:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWPROT;
wire   [3:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWQOS;
wire   [3:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWREGION;
wire   [0:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWUSER;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_WVALID;
wire   [31:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_WDATA;
wire   [3:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_WSTRB;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_WLAST;
wire   [0:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_WID;
wire   [0:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_WUSER;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_ARVALID;
wire   [63:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_ARADDR;
wire   [0:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_ARID;
wire   [31:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_ARLEN;
wire   [2:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_ARSIZE;
wire   [1:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_ARBURST;
wire   [1:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_ARLOCK;
wire   [3:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_ARCACHE;
wire   [2:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_ARPROT;
wire   [3:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_ARQOS;
wire   [3:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_ARREGION;
wire   [0:0] grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_ARUSER;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_RREADY;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_BREADY;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_v3_buffer_V_read;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_ext_blocking_n;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_str_blocking_n;
wire    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_int_blocking_n;
reg    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_start_reg;
reg    ap_block_state2_io;
wire    ap_CS_fsm_state3;
wire    v3_buffer_V_full_n;
reg    v3_buffer_V_write;
reg    grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_start_reg;
wire    ap_CS_fsm_state6;
wire   [31:0] v3_buffer_V_dout;
wire    v3_buffer_V_empty_n;
reg    v3_buffer_V_read;
wire  signed [63:0] sext_ln321_fu_150_p1;
reg    ap_block_state75;
reg    ap_block_state1;
reg   [74:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
reg    ap_ST_fsm_state75_blk;
wire    ap_ext_blocking_cur_n;
reg    ap_ext_blocking_sub_n;
reg    ap_wait_0;
reg    ap_sub_ext_blocking_0;
reg    ap_wait_1;
reg    ap_sub_ext_blocking_1;
reg    ap_str_blocking_sub_n;
reg    ap_sub_str_blocking_0;
reg    ap_sub_str_blocking_1;
reg    ap_int_blocking_sub_n;
reg    ap_sub_int_blocking_0;
reg    ap_sub_int_blocking_1;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 75'd1;
#0 grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_start_reg = 1'b0;
#0 grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_start_reg = 1'b0;
end

ydma_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5 grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_start),
    .ap_done(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_done),
    .ap_idle(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_idle),
    .ap_ready(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_ready),
    .m_axi_aximm3_AWVALID(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_AWVALID),
    .m_axi_aximm3_AWREADY(1'b0),
    .m_axi_aximm3_AWADDR(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_AWADDR),
    .m_axi_aximm3_AWID(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_AWID),
    .m_axi_aximm3_AWLEN(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_AWLEN),
    .m_axi_aximm3_AWSIZE(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_AWSIZE),
    .m_axi_aximm3_AWBURST(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_AWBURST),
    .m_axi_aximm3_AWLOCK(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_AWLOCK),
    .m_axi_aximm3_AWCACHE(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_AWCACHE),
    .m_axi_aximm3_AWPROT(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_AWPROT),
    .m_axi_aximm3_AWQOS(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_AWQOS),
    .m_axi_aximm3_AWREGION(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_AWREGION),
    .m_axi_aximm3_AWUSER(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_AWUSER),
    .m_axi_aximm3_WVALID(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_WVALID),
    .m_axi_aximm3_WREADY(1'b0),
    .m_axi_aximm3_WDATA(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_WDATA),
    .m_axi_aximm3_WSTRB(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_WSTRB),
    .m_axi_aximm3_WLAST(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_WLAST),
    .m_axi_aximm3_WID(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_WID),
    .m_axi_aximm3_WUSER(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_WUSER),
    .m_axi_aximm3_ARVALID(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARVALID),
    .m_axi_aximm3_ARREADY(m_axi_aximm3_ARREADY),
    .m_axi_aximm3_ARADDR(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARADDR),
    .m_axi_aximm3_ARID(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARID),
    .m_axi_aximm3_ARLEN(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARLEN),
    .m_axi_aximm3_ARSIZE(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARSIZE),
    .m_axi_aximm3_ARBURST(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARBURST),
    .m_axi_aximm3_ARLOCK(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARLOCK),
    .m_axi_aximm3_ARCACHE(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARCACHE),
    .m_axi_aximm3_ARPROT(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARPROT),
    .m_axi_aximm3_ARQOS(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARQOS),
    .m_axi_aximm3_ARREGION(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARREGION),
    .m_axi_aximm3_ARUSER(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARUSER),
    .m_axi_aximm3_RVALID(m_axi_aximm3_RVALID),
    .m_axi_aximm3_RREADY(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_RREADY),
    .m_axi_aximm3_RDATA(m_axi_aximm3_RDATA),
    .m_axi_aximm3_RLAST(m_axi_aximm3_RLAST),
    .m_axi_aximm3_RID(m_axi_aximm3_RID),
    .m_axi_aximm3_RUSER(m_axi_aximm3_RUSER),
    .m_axi_aximm3_RRESP(m_axi_aximm3_RRESP),
    .m_axi_aximm3_BVALID(1'b0),
    .m_axi_aximm3_BREADY(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_BREADY),
    .m_axi_aximm3_BRESP(2'd0),
    .m_axi_aximm3_BID(1'd0),
    .m_axi_aximm3_BUSER(1'd0),
    .sext_ln321_5(trunc_ln321_5_reg_188),
    .winner_size(winner_size),
    .input3(input3),
    .v3_buffer_V_din(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_v3_buffer_V_din),
    .v3_buffer_V_full_n(v3_buffer_V_full_n),
    .v3_buffer_V_write(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_v3_buffer_V_write),
    .ap_ext_blocking_n(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_ext_blocking_n),
    .ap_str_blocking_n(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_str_blocking_n),
    .ap_int_blocking_n(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_int_blocking_n)
);

ydma_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6 grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_start),
    .ap_done(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_done),
    .ap_idle(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_idle),
    .ap_ready(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_ready),
    .m_axi_aximm3_AWVALID(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWVALID),
    .m_axi_aximm3_AWREADY(m_axi_aximm3_AWREADY),
    .m_axi_aximm3_AWADDR(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWADDR),
    .m_axi_aximm3_AWID(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWID),
    .m_axi_aximm3_AWLEN(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWLEN),
    .m_axi_aximm3_AWSIZE(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWSIZE),
    .m_axi_aximm3_AWBURST(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWBURST),
    .m_axi_aximm3_AWLOCK(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWLOCK),
    .m_axi_aximm3_AWCACHE(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWCACHE),
    .m_axi_aximm3_AWPROT(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWPROT),
    .m_axi_aximm3_AWQOS(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWQOS),
    .m_axi_aximm3_AWREGION(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWREGION),
    .m_axi_aximm3_AWUSER(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWUSER),
    .m_axi_aximm3_WVALID(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_WVALID),
    .m_axi_aximm3_WREADY(m_axi_aximm3_WREADY),
    .m_axi_aximm3_WDATA(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_WDATA),
    .m_axi_aximm3_WSTRB(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_WSTRB),
    .m_axi_aximm3_WLAST(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_WLAST),
    .m_axi_aximm3_WID(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_WID),
    .m_axi_aximm3_WUSER(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_WUSER),
    .m_axi_aximm3_ARVALID(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_ARVALID),
    .m_axi_aximm3_ARREADY(1'b0),
    .m_axi_aximm3_ARADDR(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_ARADDR),
    .m_axi_aximm3_ARID(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_ARID),
    .m_axi_aximm3_ARLEN(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_ARLEN),
    .m_axi_aximm3_ARSIZE(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_ARSIZE),
    .m_axi_aximm3_ARBURST(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_ARBURST),
    .m_axi_aximm3_ARLOCK(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_ARLOCK),
    .m_axi_aximm3_ARCACHE(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_ARCACHE),
    .m_axi_aximm3_ARPROT(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_ARPROT),
    .m_axi_aximm3_ARQOS(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_ARQOS),
    .m_axi_aximm3_ARREGION(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_ARREGION),
    .m_axi_aximm3_ARUSER(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_ARUSER),
    .m_axi_aximm3_RVALID(1'b0),
    .m_axi_aximm3_RREADY(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_RREADY),
    .m_axi_aximm3_RDATA(32'd0),
    .m_axi_aximm3_RLAST(1'b0),
    .m_axi_aximm3_RID(1'd0),
    .m_axi_aximm3_RUSER(1'd0),
    .m_axi_aximm3_RRESP(2'd0),
    .m_axi_aximm3_BVALID(m_axi_aximm3_BVALID),
    .m_axi_aximm3_BREADY(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_BREADY),
    .m_axi_aximm3_BRESP(m_axi_aximm3_BRESP),
    .m_axi_aximm3_BID(m_axi_aximm3_BID),
    .m_axi_aximm3_BUSER(m_axi_aximm3_BUSER),
    .sext_ln321_6(trunc_ln321_6_reg_199),
    .winner_size(winner_size),
    .v3_buffer_V_dout(v3_buffer_V_dout),
    .v3_buffer_V_empty_n(v3_buffer_V_empty_n),
    .v3_buffer_V_read(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_v3_buffer_V_read),
    .winner(winner),
    .ap_ext_blocking_n(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_ext_blocking_n),
    .ap_str_blocking_n(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_str_blocking_n),
    .ap_int_blocking_n(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_int_blocking_n)
);

// ydma_fifo_w32_d64_A v3_buffer_V_fifo_U(
//     .clk(ap_clk),
//     .reset(ap_rst),
//     .if_read_ce(1'b1),
//     .if_write_ce(1'b1),
//     .if_din(grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_v3_buffer_V_din),
//     .if_full_n(v3_buffer_V_full_n),
//     .if_write(v3_buffer_V_write),
//     .if_dout(v3_buffer_V_dout),
//     .if_empty_n(v3_buffer_V_empty_n),
//     .if_read(v3_buffer_V_read)
// );

assign v3_buffer_V_dout = I_v3_buffer_V_dout;
assign v3_buffer_V_empty_n = I_v3_buffer_V_empty_n;
assign O_v3_buffer_V_read = v3_buffer_V_read;


always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((icmp_ln46_reg_173 == 1'd1) & (m_axi_aximm3_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state75))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state2_io) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln46_reg_173 == 1'd0))) begin
            grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_start_reg <= 1'b1;
        end else if ((grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_ready == 1'b1)) begin
            grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_start_reg <= 1'b1;
        end else if ((grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_ready == 1'b1)) begin
            grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln46_reg_173 <= icmp_ln46_fu_133_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln46_reg_173 == 1'd0))) begin
        trunc_ln321_5_reg_188 <= {{input3[63:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        trunc_ln321_6_reg_199 <= {{winner[63:2]}};
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state2_io)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

always @ (*) begin
    if ((grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

always @ (*) begin
    if ((grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln46_reg_173 == 1'd1) & (m_axi_aximm3_BVALID == 1'b0))) begin
        ap_ST_fsm_state75_blk = 1'b1;
    end else begin
        ap_ST_fsm_state75_blk = 1'b0;
    end
end

always @ (*) begin
    if ((m_axi_aximm3_WREADY == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if ((~((icmp_ln46_reg_173 == 1'd1) & (m_axi_aximm3_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state75))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if ((((ap_wait_1 & ap_sub_ext_blocking_1) == 1'b1) & ((ap_wait_0 & ap_sub_ext_blocking_0) == 1'b1))) begin
        ap_ext_blocking_sub_n = 1'b0;
    end else begin
        ap_ext_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_wait_1 & ap_sub_int_blocking_1) == 1'b1) & ((ap_wait_0 & ap_sub_int_blocking_0) == 1'b1))) begin
        ap_int_blocking_sub_n = 1'b0;
    end else begin
        ap_int_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln46_reg_173 == 1'd1) & (m_axi_aximm3_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state75))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_wait_1 & ap_sub_str_blocking_1) == 1'b1) & ((ap_wait_0 & ap_sub_str_blocking_0) == 1'b1))) begin
        ap_str_blocking_sub_n = 1'b0;
    end else begin
        ap_str_blocking_sub_n = 1'b1;
    end
end

always @ (*) begin
    if ((grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_0 = 1'b1;
    end else begin
        ap_sub_ext_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_ext_blocking_n == 1'b0)) begin
        ap_sub_ext_blocking_1 = 1'b1;
    end else begin
        ap_sub_ext_blocking_1 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_0 = 1'b1;
    end else begin
        ap_sub_int_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_int_blocking_n == 1'b0)) begin
        ap_sub_int_blocking_1 = 1'b1;
    end else begin
        ap_sub_int_blocking_1 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_0 = 1'b1;
    end else begin
        ap_sub_str_blocking_0 = 1'b0;
    end
end

always @ (*) begin
    if ((grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_str_blocking_n == 1'b0)) begin
        ap_sub_str_blocking_1 = 1'b1;
    end else begin
        ap_sub_str_blocking_1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state3 == ap_CS_fsm)) begin
        ap_wait_0 = 1'b1;
    end else begin
        ap_wait_0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_ST_fsm_state6 == ap_CS_fsm)) begin
        ap_wait_1 = 1'b1;
    end else begin
        ap_wait_1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln46_reg_173 == 1'd1))) begin
        aximm3_blk_n_AW = m_axi_aximm3_AWREADY;
    end else begin
        aximm3_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) & (icmp_ln46_reg_173 == 1'd1))) begin
        aximm3_blk_n_B = m_axi_aximm3_BVALID;
    end else begin
        aximm3_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        aximm3_blk_n_W = m_axi_aximm3_WREADY;
    end else begin
        aximm3_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln46_reg_173 == 1'd0)))) begin
        m_axi_aximm3_ARVALID = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARVALID;
    end else begin
        m_axi_aximm3_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_io) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln46_reg_173 == 1'd1))) begin
        m_axi_aximm3_AWADDR = sext_ln321_fu_150_p1;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_aximm3_AWADDR = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWADDR;
    end else begin
        m_axi_aximm3_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_aximm3_AWBURST = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWBURST;
    end else begin
        m_axi_aximm3_AWBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_aximm3_AWCACHE = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWCACHE;
    end else begin
        m_axi_aximm3_AWCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_aximm3_AWID = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWID;
    end else begin
        m_axi_aximm3_AWID = 1'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_io) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln46_reg_173 == 1'd1))) begin
        m_axi_aximm3_AWLEN = 32'd1;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_aximm3_AWLEN = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWLEN;
    end else begin
        m_axi_aximm3_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_aximm3_AWLOCK = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWLOCK;
    end else begin
        m_axi_aximm3_AWLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_aximm3_AWPROT = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWPROT;
    end else begin
        m_axi_aximm3_AWPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_aximm3_AWQOS = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWQOS;
    end else begin
        m_axi_aximm3_AWQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_aximm3_AWREGION = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWREGION;
    end else begin
        m_axi_aximm3_AWREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_aximm3_AWSIZE = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWSIZE;
    end else begin
        m_axi_aximm3_AWSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_aximm3_AWUSER = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWUSER;
    end else begin
        m_axi_aximm3_AWUSER = 1'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state2_io) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln46_reg_173 == 1'd1))) begin
        m_axi_aximm3_AWVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_aximm3_AWVALID = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_AWVALID;
    end else begin
        m_axi_aximm3_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln46_reg_173 == 1'd1) & (m_axi_aximm3_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state75) & (icmp_ln46_reg_173 == 1'd1))) begin
        m_axi_aximm3_BREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_aximm3_BREADY = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_BREADY;
    end else begin
        m_axi_aximm3_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln46_reg_173 == 1'd0)))) begin
        m_axi_aximm3_RREADY = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_RREADY;
    end else begin
        m_axi_aximm3_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        m_axi_aximm3_WDATA = 32'd42;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_aximm3_WDATA = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_WDATA;
    end else begin
        m_axi_aximm3_WDATA = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_aximm3_WID = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_WID;
    end else begin
        m_axi_aximm3_WID = 1'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_aximm3_WLAST = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_WLAST;
    end else begin
        m_axi_aximm3_WLAST = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        m_axi_aximm3_WSTRB = 4'd15;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_aximm3_WSTRB = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_WSTRB;
    end else begin
        m_axi_aximm3_WSTRB = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_aximm3_WUSER = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_WUSER;
    end else begin
        m_axi_aximm3_WUSER = 1'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (m_axi_aximm3_WREADY == 1'b1))) begin
        m_axi_aximm3_WVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        m_axi_aximm3_WVALID = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_m_axi_aximm3_WVALID;
    end else begin
        m_axi_aximm3_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        v3_buffer_V_read = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_v3_buffer_V_read;
    end else begin
        v3_buffer_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        v3_buffer_V_write = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_v3_buffer_V_write;
    end else begin
        v3_buffer_V_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b0 == ap_block_state2_io) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln46_reg_173 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else if (((1'b0 == ap_block_state2_io) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln46_reg_173 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        // ap_ST_fsm_state3 : begin
        //     if (((1'b1 == ap_CS_fsm_state3) & (grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_done == 1'b1))) begin
        //         ap_NS_fsm = ap_ST_fsm_state4;
        //     end else begin
        //         ap_NS_fsm = ap_ST_fsm_state3;
        //     end
        // end
        ap_ST_fsm_state3 : begin
            if (1'b1 == ap_CS_fsm_state3) begin // added! ignore ap_done from fifo_in
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (m_axi_aximm3_WREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            if ((~((icmp_ln46_reg_173 == 1'd1) & (m_axi_aximm3_BVALID == 1'b0)) & (1'b1 == ap_CS_fsm_state75))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state2_io = ((icmp_ln46_reg_173 == 1'd1) & (m_axi_aximm3_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state75 = ((icmp_ln46_reg_173 == 1'd1) & (m_axi_aximm3_BVALID == 1'b0));
end

assign ap_ext_blocking_cur_n = (aximm3_blk_n_W & aximm3_blk_n_B & aximm3_blk_n_AW);

assign ap_ext_blocking_n = (ap_ext_blocking_sub_n & ap_ext_blocking_cur_n);

assign ap_int_blocking_n = (ap_int_blocking_sub_n & 1'b1);

assign ap_str_blocking_n = (ap_str_blocking_sub_n & 1'b1);

assign grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_start = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_ap_start_reg;

assign grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_start = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_51_6_fu_112_ap_start_reg;

assign grp_fu_122_p4 = {{winner[63:2]}};

assign icmp_ln46_fu_133_p2 = ((winner_size == 32'd0) ? 1'b1 : 1'b0);

assign m_axi_aximm3_ARADDR = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARADDR;

assign m_axi_aximm3_ARBURST = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARBURST;

assign m_axi_aximm3_ARCACHE = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARCACHE;

assign m_axi_aximm3_ARID = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARID;

assign m_axi_aximm3_ARLEN = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARLEN;

assign m_axi_aximm3_ARLOCK = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARLOCK;

assign m_axi_aximm3_ARPROT = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARPROT;

assign m_axi_aximm3_ARQOS = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARQOS;

assign m_axi_aximm3_ARREGION = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARREGION;

assign m_axi_aximm3_ARSIZE = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARSIZE;

assign m_axi_aximm3_ARUSER = grp_Block_split41_proc5_Pipeline_VITIS_LOOP_50_5_fu_101_m_axi_aximm3_ARUSER;

assign sext_ln321_fu_150_p1 = $signed(grp_fu_122_p4);

endmodule //ydma_Block_split41_proc5
